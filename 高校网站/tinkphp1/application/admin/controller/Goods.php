<?php


namespace app\admin\controller;


use think\Controller;
use think\Db;

class
Goods extends Controller
{
	public function  _initialize()
	{
		parent::_initialize(); // TODO: Change the autogenerated stub
	}

	public function openinsert(){
		$cate=Db::table('category')->order('id','asc')->select();
	    $this->assign('cates',$cate);
		return $this->fetch();
    }
	//插入逻辑
	public function insert(){
		//权限   请求方式  参数
		$method = $this->request->method();
		if ($method !='POST'){
			return json(['code'=>404,'msg'=>"请求方式错误"]);
		}
		//验证规则
		$data=input('post.');
		$validate=validate('Goods');
		if (!$validate->scene('insert')->check($data)){
			return json(['code'=>404,'msg'=>$validate->getError()]);
		}
		//插入数据
		$result=Db::table('goods')->insert($data);
		if ($result>0){
			return json(['code'=>200,'msg'=>"导航插入成功"]);
		} else {
			return json(['code'=>404,'msg'=>"导航插入失败"]);
		}
	}

	public function query(){
		//1.总数
		//  2.当前页数据   select *from goods oder by id asc limit offset,length

        //搜索条件：单击搜索按钮
		//cid传
		$qs=$this->request->get();

		$where=[];
		if (isset($qs['cid'])&&!empty($qs['cid'])){
			$where['cid']=$qs['cid'];
		}

		if (isset($qs['price_min'])&&!empty($qs['price_max'])&&($qs['price_max']>=$qs['price_min'])){
			$where['sale']=arr('between',[$qs['price_min'],$qs['price_max']]);
		}
		if (isset($qs['gname'])&&!empty($qs['gname'])){
			$where['id']=['like',"%{$qs['gname']}%"];
		}


		$page=$qs['page'];
		$limit=$qs['limit'];
		$offset=($page-1)*$limit;
		$count=Db::table('goods')->where($where)->count();
//		$data=Db::table('goods')->limit()->select();
		$data=Db::table('goods')->where($where)->page($page,$limit)->select();
		return json([
			'code'=>0,
			'msg'=>'成功',
			'count'=>$count,
			'data'=>$data
		]);
	}
    public function index(){
        $cate=Db::table('category')->select();
	    $this->assign('cates',$cate);
		return $this->fetch();

    }

	public function delete(){
//		$data=input('post.');
		if (!$this->request->isPost()){
			return json(['code'=>404,'msg'=>"请求方式错误"]);
		}
		//验证规则
		$data=input('post.');
		$validate=validate('Goods');
		if (!$validate->scene('delete')->check($data)){
			return json(['code'=>404,'msg'=>$validate->getError()]);
		}
		$result=Db::table('goods')->where('id',$data['id'])->delete();
		if ($result>0){
			return json(['code'=>200,'msg'=>"删除成功"]);
		} else {
			return json(['code'=>404,'msg'=>"删除失败"]);
		}
	}


	public function update(){
		if (!$this->request->isPost()){
			return json(['code'=>404,'msg'=>"请求方式错误"]);
		}
		//验证规则
		$data=input('post.');
		var_dump($data);
		$validate=validate('Goods');
		if (!$validate->scene('update')->check($data)){
			return json(['code'=>404,'msg'=>$validate->getError()]);
		}
		$result=Db::table('goods')->where('id',$data['id'])
			->update([$data['field']=>$data['value']]);
		if ($result>0){
			return json(['code'=>200,'msg'=>"更新成功"]);
		} else {
			return json(['code'=>404,'msg'=>"更新失败"]);
		}
	}


	public function read($id)
	{ //
		 }/*** 显示编辑资源表单页. **
//		 @param int $id * @return \think\Response */
		public function edit($id)
		{ //
		}
}